function v_weno = reconstruction_weno_vec(k,v,c) % z(idx)+dz/2 --> z(idx)
  p = 2;
  eps = 1e-10;
  % Assuming 3-D v(z+dz/2,var,ACE-i) & c(z,var==c,ACE-i), size(c,2)=1
  % v is to be interpolated; c velocity at interpolation points
  v = permute(v,[4,1,2,3]); % v(z+dz/2,var,ACE-i)-->(1,z+dz/2,var,ACE-i) for vectorization
  c = permute(c,[4,1,2,3]); % c(z,var==c,ACE-i)-->(1,z,var==c,ACE-i) for vectorization
  if k==2
    beta = [ circshift(v,-1)-v;...
             v-circshift(v,1);...
             circshift(v,1)-circshift(v,2) ].^2.0; % beta(r,z,var,ACE-i)
    d = [0; 0.666666666666667; 0.333333333333333].*(c>=0) + [0.333333333333333; 0.666666666666667; 0].*(c<0); % d(r,z+dz/2,1,ACE-i)   
    alpha = d./(eps + beta).^p; % alpha(r,z,var,ACE-i)
    w = alpha./sum(alpha);
    % v_weno(1,z,var,ACE-i)
    v_weno = w(1,:,:,:) .* (1.5*v-0.5*circshift(v,-1))+...
             w(2,:,:,:) .* (0.5*(circshift(v,1)+v))+ ...
             w(3,:,:,:) .* (-0.5*circshift(v,2)+1.5*circshift(v,1));
    % Surface BC modification (reduced order)
    v_weno(1,2,:,:) = v_weno(1,2,:,:).*(c(1,2,:,:)<0) + v(1,1,:,:).*(c(1,2,:,:)>=0);
  elseif k==3
    beta = [  1.083333333333333*( circshift(v,-2)-2.0*circshift(v,-1)+v ).^2.0+...
              0.25*(      circshift(v,-2)-4.0*circshift(v,-1)+3.0*v ).^2.0;
              1.083333333333333*( circshift(v,1)-2.0*v+circshift(v,-1) ).^2.0+...
              0.25*(   3.0*circshift(v,1)-4.0*v   +circshift(v,-1)   ).^2.0;
              1.083333333333333*( circshift(v,2)-2.0*circshift(v,1)   +v ).^2.0+...
              0.25*(      circshift(v,2)               -v ).^2.0;
              1.083333333333333*( circshift(v,3)-2.0*circshift(v,2)   +circshift(v,1) ).^2.0+...
              0.25*(      circshift(v,3)-4.0*circshift(v,2)+3.0*circshift(v,1) ).^2.0 ]; % beta(r,z,var,ACE-i)
    d = [0; 0.3; 0.6; 0.1].*(c>=0) + [0.1; 0.6; 0.3; 0].*(c<0); % d(r,z,1,ACE-i)   
    alpha = d./(eps + beta).^p; % alpha(r,z,var,ACE-i)
    w = alpha./sum(alpha); % w(r,z,var,ACE-i)
    % v_weno(1,z,var,ACE-i)
    v_weno = w(1,:,:,:) .* (1.833333333333333*v-1.166666666666667*circshift(v,-1)+0.333333333333333*circshift(v,-2))+...
             w(2,:,:,:) .* (0.333333333333333*circshift(v,1)+0.833333333333333*v-0.166666666666667*circshift(v,-1))+ ...
             w(3,:,:,:) .* (-0.166666666666667*circshift(v,2)+0.833333333333333*circshift(v,1)+0.333333333333333*v)+ ...
             w(4,:,:,:) .* (0.333333333333333*circshift(v,3)-1.166666666666667*circshift(v,2)+1.833333333333333*circshift(v,1));
    % Surface BC modification (reduced order)   
    alphar = [0.666666666666667; 0.333333333333333]./(eps + [ v(1,3,:,:)-v(1,2,:,:);...
                                                              v(1,2,:,:)-v(1,1,:,:) ].^2.0 ).^p; % alpha(r,z,var,ACE-i)
    wr = alphar./sum(alphar); % w(r,z,var,ACE-i)
    v_weno(1,3,:,:) = v_weno(1,3,:,:).*(c(1,3,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.5*(v(1,2,:,:)+v(1,3,:,:)))+ ...
                        wr(2,:,:,:) .* (-0.5*v(1,1,:,:)+1.5*v(1,2,:,:))).*(c(1,3,:,:)>=0);
    v_weno(1,2,:,:) = v_weno(1,2,:,:).*(c(1,2,:,:)<0) + v(1,1,:,:).*(c(1,2,:,:)>=0);       
  elseif k==4
    beta = [ circshift(v,-3).*( 547.0*circshift(v,-3)-3882.0*circshift(v,-2)+4642.0*circshift(v,-1)-1854.0*v )+circshift(v,-2).*( 7043.0*circshift(v,-2)-17246.0*circshift(v,-1)+7042.0*v )+circshift(v,-1).*(11003.0*circshift(v,-1)-9402.0*v )+2107.0*v.^2.0;
             circshift(v,1).*( 2107.0*circshift(v,1)-9402.0*v+7042.0*circshift(v,-1)-1854.0*circshift(v,-2) )+v.*( 11003.0*v-17246.0*circshift(v,-1)+4642.0*circshift(v,-2) )+circshift(v,-1).*( 7043.0*circshift(v,-1)-3882.0*circshift(v,-2) )+547.0*circshift(v,-2).^2.0;
             circshift(v,2).*( 547.0*circshift(v,2)-2522.0*circshift(v,1)+1922.0*v-494.0*circshift(v,-1) )+circshift(v,1).*( 3443.0*circshift(v,1)-5966.0*v+1602.0*circshift(v,-1) )+v.*( 2843.0*v-1642.0*circshift(v,-1) )+267.0*circshift(v,-1).^2.0;
             circshift(v,3).*( 267.0*circshift(v,3)-1642.0*circshift(v,2)+1602.0*circshift(v,1)-494.0*v )+circshift(v,2).*( 2843.0*circshift(v,2)-5966.0*circshift(v,1)+1922.0*v )+circshift(v,1).*( 3443.0*circshift(v,1)-2522.0*v )+547.0*v.^2.0;
             circshift(v,4).*( 547.0*circshift(v,4)-3882.0*circshift(v,3)+4642.0*circshift(v,2)-1854.0*circshift(v,1) )+circshift(v,3).*( 7043.0*circshift(v,3)-17246.0*circshift(v,2)+7042.0*circshift(v,1) )+circshift(v,2).*(11003.0*circshift(v,2)-9402.0*circshift(v,1) )+2107.0*circshift(v,1).^2.0 ];
    d = [0; 0.028571428571429; 0.342857142857143; 0.514285714285714; 0.114285714285714].*(c>=0)+...
        [0.114285714285714; 0.514285714285714; 0.342857142857143; 0.028571428571429; 0].*(c<0); % d(r,z,1,ACE-i)   
    alpha = d./(eps + beta).^p; 
    w = alpha./sum(alpha); 
    % v_weno(1,z,var,ACE-i)
    v_weno = w(1,:,:,:) .* (2.083333333333333*v-1.916666666666667*circshift(v,-1)+1.083333333333333*circshift(v,-2)-0.25*circshift(v,-3))+...
             w(2,:,:,:) .* (0.25*circshift(v,1)+1.083333333333333*v-0.416666666666667*circshift(v,-1)+0.083333333333333*circshift(v,-2))+ ...
             w(3,:,:,:) .* (-0.083333333333333*circshift(v,2)+0.583333333333333*circshift(v,1)+0.583333333333333*v-0.083333333333333*circshift(v,-1))+ ...
             w(4,:,:,:) .* (0.083333333333333*circshift(v,3)-0.416666666666667*circshift(v,2)+1.083333333333333*circshift(v,1)+0.25*v)+ ...
             w(5,:,:,:) .* (-0.25*circshift(v,4)+1.083333333333333*circshift(v,3)-1.916666666666667*circshift(v,2)+2.083333333333333*circshift(v,1)); 
    % Surface BC modification (reduced order)
    alphar = [0.3; 0.6; 0.1]./(eps + [ 1.083333333333333*( v(1,3,:,:)-2.0*v(1,4,:,:)+v(1,5,:,:) ).^2.0+0.25*( 3.0*v(1,3,:,:)-4.0*v(1,4,:,:)+v(1,5,:,:) ).^2.0;
                                       1.083333333333333*( v(1,2,:,:)-2.0*v(1,3,:,:)+v(1,4,:,:) ).^2.0+.25*( v(1,2,:,:)-v(1,4,:,:) ).^2.0;
                                       1.083333333333333*( v(1,1,:,:)-2.0*v(1,2,:,:)+v(1,3,:,:) ).^2.0+0.25*( v(1,1,:,:)-4.0*v(1,2,:,:)+3.0*v(1,3,:,:) ).^2.0 ] ).^p; 
    wr = alphar./sum(alphar); 
    v_weno(1,4,:,:) = v_weno(1,4,:,:).*(c(1,4,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.333333333333333*v(1,3,:,:)+0.833333333333333*v(1,4,:,:)-0.166666666666667*v(1,5,:,:))+ ...
                        wr(2,:,:,:) .* (-0.166666666666667*v(1,2,:,:)+0.833333333333333*v(1,3,:,:)+0.333333333333333*v(1,4,:,:))+ ...
                        wr(3,:,:,:) .* (0.333333333333333*v(1,1,:,:)-1.166666666666667*v(1,2,:,:)+1.833333333333333*v(1,3,:,:)) ).*(c(1,4,:,:)>=0);
    alphar = [0.666666666666667; 0.333333333333333]./(eps + [ v(1,3,:,:)-v(1,2,:,:);...
                                                              v(1,2,:,:)-v(1,1,:,:) ].^2.0 ).^p; % alpha(r,z,var,ACE-i)
    wr = alphar./sum(alphar); % w(r,z,var,ACE-i)         
    v_weno(1,3,:,:) = v_weno(1,3,:,:).*(c(1,3,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.5*(v(1,2,:,:)+v(1,3,:,:)))+ ...
                        wr(2,:,:,:) .* (-0.5*v(1,1,:,:)+1.5*v(1,2,:,:))).*(c(1,3,:,:)>=0);
    v_weno(1,2,:,:) = v_weno(1,2,:,:).*(c(1,2,:,:)<0) + v(1,1,:,:).*(c(1,2,:,:)>=0);
  elseif k==5
    % Modified from Balsara & Shu (2000) via symmetry to remove wiggle near a jump for transport equation when c>0
    beta = [ circshift(v,-4).*( 22658.0*circshift(v,-4)-208501.0*circshift(v,-3)+364863.0*circshift(v,-2)-288007.0*circshift(v,-1)+86329.0*v )+circshift(v,-3).*( 482963.0*circshift(v,-3)-1704396.0*circshift(v,-2)+1358458.0*circshift(v,-1)-411487.0*v )+circshift(v,-2).*( 1521393.0*circshift(v,-2)-2462076.0*circshift(v,-1)+758823.0*v )+circshift(v,-1).*(1020563.0*circshift(v,-1)-649501.0*v )+107918.0*v.^2.0; 
             circshift(v,-3).*( 6908.0*circshift(v,-3)-60871.0*circshift(v,-2)+99213.0*circshift(v,-1)-70237.0*v+18079.0*circshift(v,1) )+circshift(v,-2).*( 138563.0*circshift(v,-2)-464976.0*circshift(v,-1)+337018.0*v-88297.0*circshift(v,1) )+circshift(v,-1).*( 406293.0*circshift(v,-1)-611976.0*v+165153.0*circshift(v,1) )+v.*( 242723.0*v-140251.0*circshift(v,1) )+22658.0*circshift(v,1).^2.0;
             circshift(v,2).*( 22658.0*circshift(v,2)-140251.0*circshift(v,1)+165153.0*v-88297.0*circshift(v,-1)+18079.0*circshift(v,-2) )+circshift(v,1).*( 242723.0*circshift(v,1)-611976.0*v+337018.0*circshift(v,-1)-70237.0*circshift(v,-2) )+v.*( 406293.0*v-464976.0*circshift(v,-1)+99213.0*circshift(v,-2) )+circshift(v,-1).*( 138563.0*circshift(v,-1)-60871.0*circshift(v,-2) )+6908.0*circshift(v,-2).^2.0;
             circshift(v,3).*( 6908.0*circshift(v,3)-51001.0*circshift(v,2)+67923.0*circshift(v,1)-38947.0*v+8209.0*circshift(v,-1) )+circshift(v,2).*( 104963.0*circshift(v,2)-299076.0*circshift(v,1)+179098.0*v-38947.0*circshift(v,-1) )+circshift(v,1).*( 231153.0*circshift(v,1)-299076.0*v+67923.0*circshift(v,-1) )+v.*( 104963.0*v-51001.0*circshift(v,-1) )+6908.0*circshift(v,-1).^2.0;
             circshift(v,4).*( 6908.0*circshift(v,4)-60871.0*circshift(v,3)+99213.0*circshift(v,2)-70237.0*circshift(v,1)+18079.0*v )+circshift(v,3).*( 138563.0*circshift(v,3)-464976.0*circshift(v,2)+337018.0*circshift(v,1)-88297.0*v )+circshift(v,2).*( 406293.0*circshift(v,2)-611976.0*circshift(v,1)+165153.0*v )+circshift(v,1).*( 242723.0*circshift(v,1)-140251.0*v )+22658.0*v.^2.0;
             circshift(v,5).*( 22658.0*circshift(v,5)-208501.0*circshift(v,4)+364863.0*circshift(v,3)-288007.0*circshift(v,2)+86329.0*circshift(v,1) )+circshift(v,4).*( 482963.0*circshift(v,4)-1704396.0*circshift(v,3)+1358458.0*circshift(v,2)-411487.0*circshift(v,1) )+circshift(v,3).*( 1521393.0*circshift(v,3)-2462076.0*circshift(v,2)+758823.0*circshift(v,1) )+circshift(v,2).*(1020563.0*circshift(v,2)-649501.0*circshift(v,1) )+107918.0*circshift(v,1).^2.0 ];   
    d = [0;0.007936507936508;0.158730158730159;0.476190476190476;0.317460317460317;0.039682539682540].*(c>=0)+...
        [0.039682539682540;0.317460317460317;0.476190476190476;0.158730158730159;0.007936507936508;0].*(c<0); % d(r,z,1,ACE-i)
    alpha = d./(eps + beta).^p; % alpha(r,z,var,ACE-i)
    w = alpha./sum(alpha); % w(r,z,var,ACE-i)
    % v_weno(1,z,var,ACE-i)
    v_weno = w(1,:,:,:) .* (2.283333333333333*v-2.716666666666667*circshift(v,-1)+2.283333333333333*circshift(v,-2)-1.05*circshift(v,-3)+0.2*circshift(v,-4))+ ...
             w(2,:,:,:) .* (0.2*circshift(v,1)+1.283333333333333*v-0.716666666666667*circshift(v,-1)+0.283333333333333*circshift(v,-2)-0.05*circshift(v,-3))+ ...
             w(3,:,:,:) .* (-0.05*circshift(v,2)+0.45*circshift(v,1)+0.783333333333333*v-0.216666666666667*circshift(v,-1)+0.033333333333333*circshift(v,-2))+ ...
             w(4,:,:,:) .* (0.033333333333333*circshift(v,3)-0.216666666666667*circshift(v,2)+0.783333333333333*circshift(v,1)+0.45*v-0.05*circshift(v,-1))+ ...
             w(5,:,:,:) .* (-0.05*circshift(v,4)+0.283333333333333*circshift(v,3)-0.716666666666667*circshift(v,2)+1.283333333333333*circshift(v,1)+0.2*v)+ ...
             w(6,:,:,:) .* (0.2*circshift(v,5)-1.05*circshift(v,4)+2.283333333333333*circshift(v,3)-2.716666666666667*circshift(v,2)+2.283333333333333*circshift(v,1));
    % Surface BC modification (reduced order)
    alphar = [0.028571428571429;0.342857142857143;0.514285714285714;0.114285714285714]./(eps + [ v(1,4,:,:).*( 2107.0*v(1,4,:,:)-9402.0*v(1,5,:,:)+7042.0*v(1,6,:,:)-1854.0*v(1,7,:,:) )+v(1,5,:,:).*( 11003.0*v(1,5,:,:)-17246.0*v(1,6,:,:)+4642.0*v(1,7,:,:) )+v(1,6,:,:).*( 7043.0*v(1,6,:,:)-3882.0*v(1,7,:,:) )+547.0*v(1,7,:,:).^2.0;
                                                                                                 v(1,3,:,:).*( 547.0*v(1,3,:,:)-2522.0*v(1,4,:,:)+1922.0*v(1,5,:,:)-494.0*v(1,6,:,:) )+v(1,4,:,:).*( 3443.0*v(1,4,:,:)-5966.0*v(1,5,:,:)+1602.0*v(1,6,:,:) )+v(1,5,:,:).*( 2843.0*v(1,5,:,:)-1642.0*v(1,6,:,:) )+267.0*v(1,6,:,:).^2.0;
                                                                                                 v(1,2,:,:).*( 267.0*v(1,2,:,:)-1642.0*v(1,3,:,:)+1602.0*v(1,4,:,:)-494.0*v(1,5,:,:) )+v(1,3,:,:).*( 2843.0*v(1,3,:,:)-5966.0*v(1,4,:,:)+1922.0*v(1,5,:,:) )+v(1,4,:,:).*( 3443.0*v(1,4,:,:)-2522.0*v(1,5,:,:) )+547.0*v(1,5,:,:).^2.0;
                                                                                                 v(1,1,:,:).*( 547.0*v(1,1,:,:)-3882.0*v(1,2,:,:)+4642.0*v(1,3,:,:)-1854.0*v(1,4,:,:) )+v(1,2,:,:).*( 7043.0*v(1,2,:,:)-17246.0*v(1,3,:,:)+7042.0*v(1,4,:,:) )+v(1,3,:,:).*(11003.0*v(1,3,:,:)-9402.0*v(1,4,:,:) )+2107.0*v(1,4,:,:).^2.0 ] ).^p; 
    wr = alphar./sum(alphar); 
    v_weno(1,5,:,:) = v_weno(1,5,:,:).*(c(1,5,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.25*v(1,4,:,:)+1.083333333333333*v(1,5,:,:)-0.416666666666667*v(1,6,:,:)+0.083333333333333*v(1,7,:,:))+ ...
                        wr(2,:,:,:) .* (-0.083333333333333*v(1,3,:,:)+0.583333333333333*v(1,4,:,:)+0.583333333333333*v(1,5,:,:)-0.083333333333333*v(1,6,:,:))+ ...
                        wr(3,:,:,:) .* (0.083333333333333*v(1,2,:,:)-0.416666666666667*v(1,3,:,:)+1.083333333333333*v(1,4,:,:)+0.25*v(1,5,:,:))+ ...
                        wr(4,:,:,:) .* (-0.25*v(1,1,:,:)+1.083333333333333*v(1,2,:,:)-1.916666666666667*v(1,3,:,:)+2.083333333333333*v(1,4,:,:)) ).*(c(1,5,:,:)>=0); 
    alphar = [0.3; 0.6; 0.1]./(eps + [ 1.083333333333333*( v(1,3,:,:)-2.0*v(1,4,:,:)+v(1,5,:,:) ).^2.0+0.25*( 3.0*v(1,3,:,:)-4.0*v(1,4,:,:)+v(1,5,:,:) ).^2.0;
                                       1.083333333333333*( v(1,2,:,:)-2.0*v(1,3,:,:)+v(1,4,:,:) ).^2.0+.25*( v(1,2,:,:)-v(1,4,:,:) ).^2.0;
                                       1.083333333333333*( v(1,1,:,:)-2.0*v(1,2,:,:)+v(1,3,:,:) ).^2.0+0.25*( v(1,1,:,:)-4.0*v(1,2,:,:)+3.0*v(1,3,:,:) ).^2.0 ] ).^p; 
    wr = alphar./sum(alphar); 
    v_weno(1,4,:,:) = v_weno(1,4,:,:).*(c(1,4,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.333333333333333*v(1,3,:,:)+0.833333333333333*v(1,4,:,:)-0.166666666666667*v(1,5,:,:))+ ...
                        wr(2,:,:,:) .* (-0.166666666666667*v(1,2,:,:)+0.833333333333333*v(1,3,:,:)+0.333333333333333*v(1,4,:,:))+ ...
                        wr(3,:,:,:) .* (0.333333333333333*v(1,1,:,:)-1.166666666666667*v(1,2,:,:)+1.833333333333333*v(1,3,:,:)) ).*(c(1,4,:,:)>=0);
    alphar = [0.666666666666667; 0.333333333333333]./(eps + [ v(1,3,:,:)-v(1,2,:,:);...
                                                              v(1,2,:,:)-v(1,1,:,:) ].^2.0 ).^p; % alpha(r,z,var,ACE-i)
    wr = alphar./sum(alphar); % w(r,z,var,ACE-i)         
    v_weno(1,3,:,:) = v_weno(1,3,:,:).*(c(1,3,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.5*(v(1,2,:,:)+v(1,3,:,:)))+ ...
                        wr(2,:,:,:) .* (-0.5*v(1,1,:,:)+1.5*v(1,2,:,:))).*(c(1,3,:,:)>=0);
    v_weno(1,2,:,:) = v_weno(1,2,:,:).*(c(1,2,:,:)<0) + v(1,1,:,:).*(c(1,2,:,:)>=0);
  elseif k==6
    % Modified from Balsara & Shu (2000) via symmetry to remove wiggle near a jump for transport equation when c>0
    beta = [ circshift(v,-5).*( 1152561.0*circshift(v,-5)-12950184.0*circshift(v,-4)+29442256.0*circshift(v,-3)-33918804.0*circshift(v,-2)+19834350.0*circshift(v,-1)-4712740.0*v )+circshift(v,-4).*( 36480687.0*circshift(v,-4)-166461044.0*circshift(v,-3)+192596472.0*circshift(v,-2)-113206788.0*circshift(v,-1)+27060170.0*v )+circshift(v,-3).*( 190757572.0*circshift(v,-3)-444003904.0*circshift(v,-2)+262901672.0*circshift(v,-1)-63394124.0*v )+circshift(v,-2).*( 260445372.0*circshift(v,-2)-311771244.0*circshift(v,-1)+76206736.0*v )+circshift(v,-1).*( 94851237.0*circshift(v,-1)-47460464.0*v )+6150211.0*v.^2.0; 
             circshift(v,-4).*( 271779.0*circshift(v,-4)-3015728.0*circshift(v,-3)+6694608.0*circshift(v,-2)-7408908.0*circshift(v,-1)+4067018.0*v-880548.0*circshift(v,1) )+circshift(v,-3).*( 8449957.0*circshift(v,-3)-37913324.0*circshift(v,-2)+42405032.0*circshift(v,-1)-23510468.0*v+5134574.0*circshift(v,1) )+circshift(v,-2).*( 43093692.0*circshift(v,-2)-97838784.0*circshift(v,-1)+55053752.0*v-12183636.0*circshift(v,1) )+circshift(v,-1).*( 56662212.0*circshift(v,-1)-65224244.0*v+14742480.0*circshift(v,1) )+v.*( 19365967.0*v-9117992.0*circshift(v,1) )+1152561.0*circshift(v,1).^2.0;
             circshift(v,2).*( 1152561.0*circshift(v,2)-9117992.0*v+14742480.0*v-12183636.0*circshift(v,-1)+5134574.0*circshift(v,-2)-880548.0*circshift(v,-3) )+circshift(v,1).*( 19365967.0*circshift(v,1)-65224244.0*v+55053752.0*circshift(v,-1)-23510468.0*circshift(v,-2)+4067018.0*circshift(v,-3) )+v.*( 56662212.0*v-97838784.0*circshift(v,-1)+42405032.0*circshift(v,-2)-7408908.0*circshift(v,-3) )+circshift(v,-1).*( 43093692.0*circshift(v,-1)-37913324.0*circshift(v,-2)+6694608.0*circshift(v,-3) )+circshift(v,-2).*( 8449957.0*circshift(v,-2)-3015728.0*circshift(v,-3) )+271779.0*circshift(v,-3).^2.0;
             circshift(v,3).*( 271779.0*circshift(v,3)-2380800.0*circshift(v,2)+4086352.0*circshift(v,1)-3462252.0*v+1458762.0*circshift(v,-1)-245620.0*circshift(v,-2) )+circshift(v,2).*( 5653317.0*circshift(v,2)-20427884.0*circshift(v,1)+17905032.0*v-7727988.0*circshift(v,-1)+1325006.0*circshift(v,-2) )+circshift(v,1).*( 19510972.0*circshift(v,1)-35817664.0*v+15929912.0*circshift(v,-1)-2792660.0*circshift(v,-2) )+v.*( 17195652.0*v-15880404.0*circshift(v,-1)+2863984.0*circshift(v,-2) )+circshift(v,-1).*( 3824847.0*circshift(v,-1)-1429976.0*circshift(v,-2) )+139633.0*circshift(v,-2).^2.0;
             circshift(v,4).*( 139633.0*circshift(v,4)-1429976.0*circshift(v,3)+2863984.0*circshift(v,2)-2792660.0*circshift(v,1)+1325006.0*v-245620.0*circshift(v,-1) )+circshift(v,3).*( 3824847.0*circshift(v,3)-15880404.0*circshift(v,2)+15929912.0*circshift(v,1)-7727988.0*v+1458762.0*circshift(v,-1) )+circshift(v,2).*( 17195652.0*circshift(v,2)-35817664.0*circshift(v,1)+17905032.0*v-3462252.0*circshift(v,-1) )+circshift(v,1).*( 19510972.0*circshift(v,1)-20427884.0*v+4086352.0*circshift(v,-1) )+v.*( 5653317.0*v-2380800.0*circshift(v,-1) )+271779.0*circshift(v,-1).^2.0;
             circshift(v,5).*( 271779.0*circshift(v,5)-3015728.0*circshift(v,4)+6694608.0*circshift(v,3)-7408908.0*circshift(v,2)+4067018.0*circshift(v,1)-880548.0*v )+circshift(v,4).*( 8449957.0*circshift(v,4)-37913324.0*circshift(v,3)+42405032.0*circshift(v,2)-23510468.0*circshift(v,1)+5134574.0*v )+circshift(v,3).*( 43093692.0*circshift(v,3)-97838784.0*circshift(v,2)+55053752.0*circshift(v,1)-12183636.0*v )+circshift(v,2).*( 56662212.0*circshift(v,2)-65224244.0*circshift(v,1)+14742480.0*v )+circshift(v,1).*( 19365967.0*circshift(v,1)-9117992.0*v )+1152561.0*v.^2.0;
             circshift(v,6).*( 1152561.0*circshift(v,6)-12950184.0*circshift(v,5)+29442256.0*circshift(v,4)-33918804.0*circshift(v,3)+19834350.0*circshift(v,2)-4712740.0*circshift(v,1) )+circshift(v,5).*( 36480687.0*circshift(v,5)-166461044.0*circshift(v,4)+192596472.0*circshift(v,3)-113206788.0*circshift(v,2)+27060170.0*circshift(v,1) )+circshift(v,4).*( 190757572.0*circshift(v,4)-444003904.0*circshift(v,3)+262901672.0*circshift(v,2)-63394124.0*circshift(v,1) )+circshift(v,3).*( 260445372.0*circshift(v,3)-311771244.0*circshift(v,2)+76206736.0*circshift(v,1) )+circshift(v,2).*( 94851237.0*circshift(v,2)-47460464.0*circshift(v,1) )+6150211.0*circshift(v,1).^2.0 ];
    d = [0;0.002164502164502;0.064935064935065;0.324675324675325;0.432900432900433;0.162337662337662;0.012987012987013].*(c>=0)+...
        [0.012987012987013;0.162337662337662;0.432900432900433;0.324675324675325;0.064935064935065;0.002164502164502;0].*(c<0); % d(r,z,1,ACE-i)
    alpha = d./(eps + beta).^p; % alpha(r,z,var,ACE-i)
    w = alpha./sum(alpha); % w(r,z,var,ACE-i)
    % v_weno(1,z,var,ACE-i)
    v_weno = w(1,:,:,:) .* (2.45*v-3.55*circshift(v,-1)+3.95*circshift(v,-2)-2.716666666666667*circshift(v,-3)+1.033333333333333*circshift(v,-4)-0.166666666666667*circshift(v,-5))+ ...
             w(2,:,:,:) .* (0.166666666666667*circshift(v,1)+1.45*v-1.05*circshift(v,-1)+0.616666666666667*circshift(v,-2)-0.216666666666667*circshift(v,-3)+0.033333333333333*circshift(v,-4))+ ...
             w(3,:,:,:) .* (-0.033333333333333*circshift(v,2)+0.366666666666667*circshift(v,1)+0.95*v-0.383333333333333*circshift(v,-1)+0.116666666666667*circshift(v,-2)-0.016666666666667*circshift(v,-3))+ ...
             w(4,:,:,:) .* (0.016666666666667*circshift(v,3)-0.133333333333333*circshift(v,2)+0.616666666666667*circshift(v,1)+0.616666666666667*v-0.133333333333333*circshift(v,-1)+0.016666666666667*circshift(v,-2))+ ...
             w(5,:,:,:) .* (-0.016666666666667*circshift(v,4)+0.116666666666667*circshift(v,3)-0.383333333333333*circshift(v,2)+0.95*circshift(v,1)+0.366666666666667*v-0.033333333333333*circshift(v,-1))+ ...
             w(6,:,:,:) .* (0.033333333333333*circshift(v,5)-0.216666666666667*circshift(v,4)+0.616666666666667*circshift(v,3)-1.05*circshift(v,2)+1.45*circshift(v,1)+0.166666666666667*v)+ ...
             w(7,:,:,:) .* (-0.166666666666667*circshift(v,6)+1.033333333333333*circshift(v,5)-2.716666666666667*circshift(v,4)+3.95*circshift(v,3)-3.55*circshift(v,2)+2.45*circshift(v,1));
    % Surface BC modification (reduced order)
    alphar = [0.007936507936508; 0.158730158730159;0.476190476190476;0.317460317460317;0.039682539682540]./(eps + [ v(1,5,:,:).*( 107918.0*v(1,5,:,:)-649501.0*v(1,6,:,:)+758823.0*v(1,7,:,:)-411487.0*v(1,8,:,:)+86329.0*v(1,9,:,:) )+v(1,6,:,:).*( 1020563.0*v(1,6,:,:)-2462076.0*v(1,7,:,:)+1358458.0*v(1,8,:,:)-288007.0*v(1,9,:,:) )+v(1,7,:,:).*( 1521393.0*v(1,7,:,:)-1704396.0*v(1,8,:,:)+364863.0*v(1,9,:,:) )+v(1,8,:,:).*( 482963.0*v(1,8,:,:)-208501.0*v(1,9,:,:) )+22658.0*v(1,9,:,:).^2.0;
                                                                                                                    v(1,4,:,:).*( 22658.0*v(1,4,:,:)-140251.0*v(1,5,:,:)+165153.0*v(1,6,:,:)-88297.0*v(1,7,:,:)+18079.0*v(1,8,:,:) )+v(1,5,:,:).*( 242723.0*v(1,5,:,:)-611976.0*v(1,6,:,:)+337018.0*v(1,7,:,:)-70237.0*v(1,8,:,:) )+v(1,6,:,:).*( 406293.0*v(1,6,:,:)-464976.0*v(1,7,:,:)+99213.0*v(1,8,:,:) )+v(1,7,:,:).*( 138563.0*v(1,7,:,:)-60871.0*v(1,8,:,:) )+6908.0*v(1,8,:,:).^2.0;
                                                                                                                    v(1,3,:,:).*( 6908.0*v(1,3,:,:)-51001.0*v(1,4,:,:)+67923.0*v(1,5,:,:)-38947.0*v(1,6,:,:)+8209.0*v(1,7,:,:) )+v(1,4,:,:).*( 104963.0*v(1,4,:,:)-299076.0*v(1,5,:,:)+179098.0*v(1,6,:,:)-38947.0*v(1,7,:,:) )+v(1,5,:,:).*( 231153.0*v(1,5,:,:)-299076.0*v(1,6,:,:)+67923.0*v(1,7,:,:) )+v(1,6,:,:).*( 104963.0*v(1,6,:,:)-51001.0*v(1,7,:,:) )+6908.0*v(1,7,:,:).^2.0;
                                                                                                                    v(1,2,:,:).*( 6908.0*v(1,2,:,:)-60871.0*v(1,3,:,:)+99213.0*v(1,4,:,:)-70237.0*v(1,5,:,:)+18079.0*v(1,6,:,:) )+v(1,3,:,:).*( 138563.0*v(1,3,:,:)-464976.0*v(1,4,:,:)+337018.0*v(1,5,:,:)-88297.0*v(1,6,:,:) )+v(1,4,:,:).*( 406293.0*v(1,4,:,:)-611976.0*v(1,5,:,:)+165153.0*v(1,6,:,:) )+v(1,5,:,:).*( 242723.0*v(1,5,:,:)-140251.0*v(1,6,:,:) )+22658.0*v(1,6,:,:).^2.0;
                                                                                                                    v(1,1,:,:).*( 22658.0*v(1,1,:,:)-208501.0*v(1,2,:,:)+364863.0*v(1,3,:,:)-288007.0*v(1,4,:,:)+86329.0*v(1,5,:,:) )+v(1,2,:,:).*( 482963.0*v(1,2,:,:)-1704396.0*v(1,3,:,:)+1358458.0*v(1,4,:,:)-411487.0*v(1,5,:,:) )+v(1,3,:,:).*( 1521393.0*v(1,3,:,:)-2462076.0*v(1,4,:,:)+758823.0*v(1,5,:,:) )+v(1,4,:,:).*(1020563.0*v(1,4,:,:)-649501.0*v(1,5,:,:) )+107918.0*v(1,5,:,:).^2.0 ] ).^p; 
    wr = alphar./sum(alphar);
    v_weno(1,6,:,:) = v_weno(1,6,:,:).*(c(1,6,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.2*v(1,5,:,:)+1.283333333333333*v(1,6,:,:)-0.716666666666667*v(1,7,:,:)+0.283333333333333*v(1,8,:,:)-0.05*v(1,9,:,:))+ ...
                        wr(2,:,:,:) .* (-0.05*v(1,4,:,:)+0.45*v(1,5,:,:)+0.783333333333333*v(1,6,:,:)-0.216666666666667*v(1,7,:,:)+0.033333333333333*v(1,8,:,:))+ ...
                        wr(3,:,:,:) .* (0.033333333333333*v(1,3,:,:)-0.216666666666667*v(1,4,:,:)+0.783333333333333*v(1,5,:,:)+0.45*v(1,6,:,:)-0.05*v(1,7,:,:))+ ...
                        wr(4,:,:,:) .* (-0.05*v(1,2,:,:)+0.283333333333333*v(1,3,:,:)-0.716666666666667*v(1,4,:,:)+1.283333333333333*v(1,5,:,:)+0.2*v(1,6,:,:))+ ...
                        wr(5,:,:,:) .* (0.2*v(1,1,:,:)-1.05*v(1,2,:,:)+2.283333333333333*v(1,3,:,:)-2.716666666666667*v(1,4,:,:)+2.283333333333333*v(1,5,:,:)) ).*(c(1,6,:,:)>=0);
    alphar = [0.028571428571429;0.342857142857143;0.514285714285714;0.114285714285714]./(eps + [ v(1,4,:,:).*( 2107.0*v(1,4,:,:)-9402.0*v(1,5,:,:)+7042.0*v(1,6,:,:)-1854.0*v(1,7,:,:) )+v(1,5,:,:).*( 11003.0*v(1,5,:,:)-17246.0*v(1,6,:,:)+4642.0*v(1,7,:,:) )+v(1,6,:,:).*( 7043.0*v(1,6,:,:)-3882.0*v(1,7,:,:) )+547.0*v(1,7,:,:).^2.0;
                                                                                                 v(1,3,:,:).*( 547.0*v(1,3,:,:)-2522.0*v(1,4,:,:)+1922.0*v(1,5,:,:)-494.0*v(1,6,:,:) )+v(1,4,:,:).*( 3443.0*v(1,4,:,:)-5966.0*v(1,5,:,:)+1602.0*v(1,6,:,:) )+v(1,5,:,:).*( 2843.0*v(1,5,:,:)-1642.0*v(1,6,:,:) )+267.0*v(1,6,:,:).^2.0;
                                                                                                 v(1,2,:,:).*( 267.0*v(1,2,:,:)-1642.0*v(1,3,:,:)+1602.0*v(1,4,:,:)-494.0*v(1,5,:,:) )+v(1,3,:,:).*( 2843.0*v(1,3,:,:)-5966.0*v(1,4,:,:)+1922.0*v(1,5,:,:) )+v(1,4,:,:).*( 3443.0*v(1,4,:,:)-2522.0*v(1,5,:,:) )+547.0*v(1,5,:,:).^2.0;
                                                                                                 v(1,1,:,:).*( 547.0*v(1,1,:,:)-3882.0*v(1,2,:,:)+4642.0*v(1,3,:,:)-1854.0*v(1,4,:,:) )+v(1,2,:,:).*( 7043.0*v(1,2,:,:)-17246.0*v(1,3,:,:)+7042.0*v(1,4,:,:) )+v(1,3,:,:).*(11003.0*v(1,3,:,:)-9402.0*v(1,4,:,:) )+2107.0*v(1,4,:,:).^2.0 ] ).^p; 
    wr = alphar./sum(alphar); 
    v_weno(1,5,:,:) = v_weno(1,5,:,:).*(c(1,5,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.25*v(1,4,:,:)+1.083333333333333*v(1,5,:,:)-0.416666666666667*v(1,6,:,:)+0.083333333333333*v(1,7,:,:))+ ...
                        wr(2,:,:,:) .* (-0.083333333333333*v(1,3,:,:)+0.583333333333333*v(1,4,:,:)+0.583333333333333*v(1,5,:,:)-0.083333333333333*v(1,6,:,:))+ ...
                        wr(3,:,:,:) .* (0.083333333333333*v(1,2,:,:)-0.416666666666667*v(1,3,:,:)+1.083333333333333*v(1,4,:,:)+0.25*v(1,5,:,:))+ ...
                        wr(4,:,:,:) .* (-0.25*v(1,1,:,:)+1.083333333333333*v(1,2,:,:)-1.916666666666667*v(1,3,:,:)+2.083333333333333*v(1,4,:,:)) ).*(c(1,5,:,:)>=0); 
    alphar = [0.3; 0.6; 0.1]./(eps + [ 1.083333333333333*( v(1,3,:,:)-2.0*v(1,4,:,:)+v(1,5,:,:) ).^2.0+0.25*( 3.0*v(1,3,:,:)-4.0*v(1,4,:,:)+v(1,5,:,:) ).^2.0;
                                       1.083333333333333*( v(1,2,:,:)-2.0*v(1,3,:,:)+v(1,4,:,:) ).^2.0+.25*( v(1,2,:,:)-v(1,4,:,:) ).^2.0;
                                       1.083333333333333*( v(1,1,:,:)-2.0*v(1,2,:,:)+v(1,3,:,:) ).^2.0+0.25*( v(1,1,:,:)-4.0*v(1,2,:,:)+3.0*v(1,3,:,:) ).^2.0 ] ).^p; 
    wr = alphar./sum(alphar); 
    v_weno(1,4,:,:) = v_weno(1,4,:,:).*(c(1,4,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.333333333333333*v(1,3,:,:)+0.833333333333333*v(1,4,:,:)-0.166666666666667*v(1,5,:,:))+ ...
                        wr(2,:,:,:) .* (-0.166666666666667*v(1,2,:,:)+0.833333333333333*v(1,3,:,:)+0.333333333333333*v(1,4,:,:))+ ...
                        wr(3,:,:,:) .* (0.333333333333333*v(1,1,:,:)-1.166666666666667*v(1,2,:,:)+1.833333333333333*v(1,3,:,:)) ).*(c(1,4,:,:)>=0);
    alphar = [0.666666666666667; 0.333333333333333]./(eps + [ v(1,3,:,:)-v(1,2,:,:);...
                                                              v(1,2,:,:)-v(1,1,:,:) ].^2.0 ).^p; % alpha(r,z,var,ACE-i)
    wr = alphar./sum(alphar); % w(r,z,var,ACE-i)         
    v_weno(1,3,:,:) = v_weno(1,3,:,:).*(c(1,3,:,:)<0)+...
                      ( wr(1,:,:,:) .* (0.5*(v(1,2,:,:)+v(1,3,:,:)))+ ...
                        wr(2,:,:,:) .* (-0.5*v(1,1,:,:)+1.5*v(1,2,:,:))).*(c(1,3,:,:)>=0);
    v_weno(1,2,:,:) = v_weno(1,2,:,:).*(c(1,2,:,:)<0) + v(1,1,:,:).*(c(1,2,:,:)>=0);
  end
  % v_weno(1,z,var,ACE-i) --> v_weno(z,var,ACE-i)
  v_weno = squeeze(v_weno);
  % Check squeeze works (doesn't work for row vector)
  if size(v_weno,1)==1 % v_weno(1,z)
    v_weno = v_weno'; % v_weno(z,1)
  end
end