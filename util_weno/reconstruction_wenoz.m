function v_weno = reconstruction_wenoz(k,v)
% Reconstruction using Eq. (2.52) in Shu (1998):
% 
% 	V(i+1/2) â‰ˆ âˆ‘_{r=0}^{k-1} wr Vr(i+1/2),
% 
% See also ISk in Jiang & Shu (1996) and ISrk in Balsara & Shu (2000).
% Redundancy: length(v) = 2k-1 is the order of accuracy.
% With smooth indicator beta defined by Eq. (28) of Castro et al. (2011):
%       tau = abs( beta_0-beta_{k-1} ) for odd k
%       tau = abs( beta_0-beta_1-beta_{k-2}+beta_{k-1} ) for even k
% Note that v = V(i-k+1:i+k-1).
  v = reshape(v,2*k-1,[]);
  p = 4;
%   eps = 1e-10;
  if k==3
    beta = [ 1.083333333333333*( v(end-2,:)-2.0*v(end-1,:)+v(end,:) ).^2.0+0.25*( 3.0*v(end-2,:)-4.0*v(end-1,:)+v(end,:) ).^2.0;
             1.083333333333333*( v(end-3,:)-2.0*v(end-2,:)+v(end-1,:) ).^2.0+.25*( v(end-3,:)-v(end-1,:) ).^2.0;
             1.083333333333333*( v(end-4,:)-2.0*v(end-3,:)+v(end-2,:) ).^2.0+0.25*( v(end-4,:)-4.0*v(end-3,:)+3.0*v(end-2,:) ).^2.0 ];
    alphar = [0.3; 0.6; 0.1].*(1+ (abs(beta(1)-beta(end))./(eps + beta)).^p);
    wr = alphar ./ sum(alphar);
    v_weno = wr(1,:) .* sum([0.333333333333333;0.833333333333333;-0.166666666666667].*v(k:end,:))+ ...
             wr(2,:) .* sum([-0.166666666666667;0.833333333333333;0.333333333333333].*v(k-1:end-1,:))+ ...
             wr(3,:) .* sum([0.333333333333333;-1.166666666666667;1.833333333333333].*v(k-2:end-2,:));
  elseif k==4
    beta = [ v(end-3,:).*( 2107.0*v(end-3,:)-9402.0*v(end-2,:)+7042.0*v(end-1,:)-1854.0*v(end,:) )+v(end-2,:).*( 11003.0*v(end-2,:)-17246.0*v(end-1,:)+4642.0*v(end,:) )+v(end-1,:).*( 7043.0*v(end-1,:)-3882.0*v(end,:) )+547.0*v(end,:).^2.0;
             v(end-4,:).*( 547.0*v(end-4,:)-2522.0*v(end-3,:)+1922.0*v(end-2,:)-494.0*v(end-1,:) )+v(end-3,:).*( 3443.0*v(end-3,:)-5966.0*v(end-2,:)+1602.0*v(end-1,:) )+v(end-2,:).*( 2843.0*v(end-2,:)-1642.0*v(end-1,:) )+267.0*v(end-1,:).^2.0;
             v(end-5,:).*( 267.0*v(end-5,:)-1642.0*v(end-4,:)+1602.0*v(end-3,:)-494.0*v(end-2,:) )+v(end-4,:).*( 2843.0*v(end-4,:)-5966.0*v(end-3,:)+1922.0*v(end-2,:) )+v(end-3,:).*( 3443.0*v(end-3,:)-2522.0*v(end-2,:) )+547.0*v(end-2,:).^2.0;
             v(end-6,:).*( 547.0*v(end-6,:)-3882.0*v(end-5,:)+4642.0*v(end-4,:)-1854.0*v(end-3,:) )+v(end-5,:).*( 7043.0*v(end-5,:)-17246.0*v(end-4,:)+7042.0*v(end-3,:) )+v(end-4,:).*(11003.0*v(end-4,:)-9402.0*v(end-3,:) )+2107.0*v(end-3,:).^2.0 ];
    alphar = [0.028571428571429; 0.342857142857143; 0.514285714285714; 0.114285714285714].*(1+ (abs(beta(1)-beta(2)-beta(end-1)+beta(end))./(eps + beta)).^p);
    wr = alphar ./ sum(alphar);
    v_weno = wr(1,:) .* sum([0.25;1.083333333333333;-0.416666666666667;0.083333333333333].*v(k:end,:))+ ...
             wr(2,:) .* sum([-0.083333333333333;0.583333333333333;0.583333333333333;-0.083333333333333].*v(k-1:end-1,:))+ ...
             wr(3,:) .* sum([0.083333333333333;-0.416666666666667;1.083333333333333;0.25].*v(k-2:end-2,:))+ ...
             wr(4,:) .* sum([-0.25;1.083333333333333;-1.916666666666667;2.083333333333333].*v(k-3:end-3,:));
  elseif k==5
    beta = [ v(end-4,:).*( 107918.0*v(end-4,:)-649501.0*v(end-3,:)+758823.0*v(end-2,:)-411487.0*v(end-1,:)+86329.0*v(end,:) )+v(end-3,:).*( 1020563.0*v(end-3,:)-2462076.0*v(end-2,:)+1358458.0*v(end-1,:)-288007.0*v(end,:) )+v(end-2,:).*( 1521393.0*v(end-2,:)-1704396.0*v(end-1,:)+364863.0*v(end,:) )+v(end-1,:).*( 482963.0*v(end-1,:)-208501.0*v(end,:) )+22658.0*v(end,:).^2.0;
             v(end-5,:).*( 22658.0*v(end-5,:)-140251.0*v(end-4,:)+165153.0*v(end-3,:)-88297.0*v(end-2,:)+18079.0*v(end-1,:) )+v(end-4,:).*( 242723.0*v(end-4,:)-611976.0*v(end-3,:)+337018.0*v(end-2,:)-70237.0*v(end-1,:) )+v(end-3,:).*( 406293.0*v(end-3,:)-464976.0*v(end-2,:)+99213.0*v(end-1,:) )+v(end-2,:).*( 138563.0*v(end-2,:)-60871.0*v(end-1,:) )+6908.0*v(end-1,:).^2.0;
             v(end-6,:).*( 6908.0*v(end-6,:)-51001.0*v(end-5,:)+67923.0*v(end-4,:)-38947.0*v(end-3,:)+8209.0*v(end-2,:) )+v(end-5,:).*( 104963.0*v(end-5,:)-299076.0*v(end-4,:)+179098.0*v(end-3,:)-38947.0*v(end-2,:) )+v(end-4,:).*( 231153.0*v(end-4,:)-299076.0*v(end-3,:)+67923.0*v(end-2,:) )+v(end-3,:).*( 104963.0*v(end-3,:)-51001.0*v(end-2,:) )+6908.0*v(end-2,:).^2.0;
             v(end-7,:).*( 6908.0*v(end-7,:)-60871.0*v(end-6,:)+99213.0*v(end-5,:)-70237.0*v(end-4,:)+18079.0*v(end-3,:) )+v(end-6,:).*( 138563.0*v(end-6,:)-464976.0*v(end-5,:)+337018.0*v(end-4,:)-88297.0*v(end-3,:) )+v(end-5,:).*( 406293.0*v(end-5,:)-611976.0*v(end-4,:)+165153.0*v(end-3,:) )+v(end-4,:).*( 242723.0*v(end-4,:)-140251.0*v(end-3,:) )+22658.0*v(end-3,:).^2.0;
             v(end-8,:).*( 22658.0*v(end-8,:)-208501.0*v(end-7,:)+364863.0*v(end-6,:)-288007.0*v(end-5,:)+86329.0*v(end-4,:) )+v(end-7,:).*( 482963.0*v(end-7,:)-1704396.0*v(end-6,:)+1358458.0*v(end-5,:)-411487.0*v(end-4,:) )+v(end-6,:).*( 1521393.0*v(end-6,:)-2462076.0*v(end-5,:)+758823.0*v(end-4,:) )+v(end-5,:).*(1020563.0*v(end-5,:)-649501.0*v(end-4,:) )+107918.0*v(end-4,:).^2.0 ];
    alphar = [0.007936507936508; 0.158730158730159;0.476190476190476;0.317460317460317;0.039682539682540].*(1+ (abs(beta(1)-beta(end))./(eps + beta)).^p);
    wr = alphar ./ sum(alphar);
    v_weno = wr(1,:) .* sum([0.2;1.283333333333333;-0.716666666666667;0.283333333333333;-0.05].*v(k:end,:))+ ...
             wr(2,:) .* sum([-0.05;0.45;0.783333333333333;-0.216666666666667;0.033333333333333].*v(k-1:end-1,:))+ ...
             wr(3,:) .* sum([0.033333333333333;-0.216666666666667;0.783333333333333;0.45;-0.05].*v(k-2:end-2,:))+ ...
             wr(4,:) .* sum([-0.05;0.283333333333333;-0.716666666666667;1.283333333333333;0.2].*v(k-3:end-3,:))+ ...
             wr(5,:) .* sum([0.2;-1.05;2.283333333333333;-2.716666666666667;2.283333333333333].*v(k-4:end-4,:));
  elseif k==6
    beta = [ v(end-5,:).*( 6150211.0*v(end-5,:)-47460464.0*v(end-4,:)+76206736.0*v(end-3,:)-63394124.0*v(end-2,:)+27060170.0*v(end-1,:)-4712740.0*v(end,:) )+v(end-4,:).*( 94851237.0*v(end-4,:)-311771244.0*v(end-3,:)+262901672.0*v(end-2,:)-113206788.0*v(end-1,:)+19834350.0*v(end,:) )+v(end-3,:).*( 260445372.0*v(end-3,:)-444003904.0*v(end-2,:)+192596472.0*v(end-1,:)-33918804.0*v(end,:) )+v(end-2,:).*( 190757572.0*v(end-2,:)-166461044.0*v(end-1,:)+29442256.0*v(end,:) )+v(end-1,:).*( 36480687.0*v(end-1,:)-12950184.0*v(end,:) )+1152561.0*v(end,:).^2.0;
             v(end-6,:).*( 1152561.0*v(end-6,:)-9117992.0*v(end-5,:)+14742480.0*v(end-4,:)-12183636.0*v(end-3,:)+5134574.0*v(end-2,:)-880548.0*v(end-1,:) )+v(end-5,:).*( 19365967.0*v(end-5,:)-65224244.0*v(end-4,:)+55053752.0*v(end-3,:)-23510468.0*v(end-2,:)+4067018.0*v(end-1,:) )+v(end-4,:).*( 56662212.0*v(end-4,:)-97838784.0*v(end-3,:)+42405032.0*v(end-2,:)-7408908.0*v(end-1,:) )+v(end-3,:).*( 43093692.0*v(end-3,:)-37913324.0*v(end-2,:)+6694608.0*v(end-1,:) )+v(end-2,:).*( 8449957.0*v(end-2,:)-3015728.0*v(end-1,:) )+271779.0*v(end-1,:).^2.0;
             v(end-7,:).*( 271779.0*v(end-7,:)-2380800.0*v(end-6,:)+4086352.0*v(end-5,:)-3462252.0*v(end-4,:)+1458762.0*v(end-3,:)-245620.0*v(end-2,:) )+v(end-6,:).*( 5653317.0*v(end-6,:)-20427884.0*v(end-5,:)+17905032.0*v(end-4,:)-7727988.0*v(end-3,:)+1325006.0*v(end-2,:) )+v(end-5,:).*( 19510972.0*v(end-5,:)-35817664.0*v(end-4,:)+15929912.0*v(end-3,:)-2792660.0*v(end-2,:) )+v(end-4,:).*( 17195652.0*v(end-4,:)-15880404.0*v(end-3,:)+2863984.0*v(end-2,:) )+v(end-3,:).*( 3824847.0*v(end-3,:)-1429976.0*v(end-2,:) )+139633.0*v(end-2,:).^2.0;
             v(end-8,:).*( 139633.0*v(end-8,:)-1429976.0*v(end-7,:)+2863984.0*v(end-6,:)-2792660.0*v(end-5,:)+1325006.0*v(end-4,:)-245620.0*v(end-3,:) )+v(end-7,:).*( 3824847.0*v(end-7,:)-15880404.0*v(end-6,:)+15929912.0*v(end-5,:)-7727988.0*v(end-4,:)+1458762.0*v(end-3,:) )+v(end-6,:).*( 17195652.0*v(end-6,:)-35817664.0*v(end-5,:)+17905032.0*v(end-4,:)-3462252.0*v(end-3,:) )+v(end-5,:).*( 19510972.0*v(end-5,:)-20427884.0*v(end-4,:)+4086352.0*v(end-3,:) )+v(end-4,:).*( 5653317.0*v(end-4,:)-2380800.0*v(end-3,:) )+271779.0*v(end-3,:).^2.0;
             v(end-9,:).*( 271779.0*v(end-9,:)-3015728.0*v(end-8,:)+6694608.0*v(end-7,:)-7408908.0*v(end-6,:)+4067018.0*v(end-5,:)-880548.0*v(end-4,:) )+v(end-8,:).*( 8449957.0*v(end-8,:)-37913324.0*v(end-7,:)+42405032.0*v(end-6,:)-23510468.0*v(end-5,:)+5134574.0*v(end-4,:) )+v(end-7,:).*( 43093692.0*v(end-7,:)-97838784.0*v(end-6,:)+55053752.0*v(end-5,:)-12183636.0*v(end-4,:) )+v(end-6,:).*( 56662212.0*v(end-6,:)-65224244.0*v(end-5,:)+14742480.0*v(end-4,:) )+v(end-5,:).*( 19365967.0*v(end-5,:)-9117992.0*v(end-4,:) )+1152561.0*v(end-4,:).^2.0;
             v(end-10,:).*( 1152561.0*v(end-10,:)-12950184.0*v(end-9,:)+29442256.0*v(end-8,:)-33918804.0*v(end-7,:)+19834350.0*v(end-6,:)-4712740.0*v(end-5,:) )+v(end-9,:).*( 36480687.0*v(end-9,:)-166461044.0*v(end-8,:)+192596472.0*v(end-7,:)-113206788.0*v(end-6,:)+27060170.0*v(end-5,:) )+v(end-8,:).*( 190757572.0*v(end-8,:)-444003904.0*v(end-7,:)+262901672.0*v(end-6,:)-63394124.0*v(end-5,:) )+v(end-7,:).*( 260445372.0*v(end-7,:)-311771244.0*v(end-6,:)+76206736.0*v(end-5,:) )+v(end-6,:).*( 94851237.0*v(end-6,:)-47460464.0*v(end-5,:) )+6150211.0*v(end-5,:).^2.0 ];
    alphar = [0.002164502164502;0.064935064935065;0.324675324675325;0.432900432900433;0.162337662337662;0.012987012987013].*(1+ (abs(beta(1)-beta(2)-beta(end-1)+beta(end))./(eps + beta)).^p);
    wr = alphar ./ sum(alphar);
    v_weno = wr(1,:) .* sum([0.166666666666667;1.45;-1.05;0.616666666666667;-0.216666666666667;0.033333333333333].*v(k:end,:))+ ...
             wr(2,:) .* sum([-0.033333333333333;0.366666666666667;0.95;-0.383333333333333;0.116666666666667;-0.016666666666667].*v(k-1:end-1,:))+ ...
             wr(3,:) .* sum([0.016666666666667;-0.133333333333333;0.616666666666667;0.616666666666667;-0.133333333333333;0.016666666666667].*v(k-2:end-2,:))+ ...
             wr(4,:) .* sum([-0.016666666666667;0.116666666666667;-0.383333333333333;0.95;0.366666666666667;-0.033333333333333].*v(k-3:end-3,:))+ ...
             wr(5,:) .* sum([0.033333333333333;-0.216666666666667;0.616666666666667;-1.05;1.45;0.166666666666667].*v(k-4:end-4,:))+ ...
             wr(6,:) .* sum([-0.166666666666667;1.033333333333333;-2.716666666666667;3.95;-3.55;2.45].*v(k-5:end-5,:));
  end
end
